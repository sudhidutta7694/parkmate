# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  image: String
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  uid: String!
  admin: Admin
  manager: Manager
  valet: Valet
  customer: Customer
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AuthProvider {
  type: AuthProviderType!
  uid: String!
}

enum AuthProviderType {
  GOOGLE
  CREDENTIALS
}

type AggregateCountOutput {
  count: Int!
}

type LoginOutput {
  user: User!
  token: String!
}

type Admin {
  uid: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User
  verifications: [Verification!]!
  verificationsCount: Int!
}

type Manager {
  createdAt: DateTime!
  updatedAt: DateTime!
  displayName: String
  uid: String!
  companyId: Int!
  company: Company
}

type Valet {
  createdAt: DateTime!
  updatedAt: DateTime!
  image: String
  companyId: Int
  uid: String!
  displayName: String!
  licenceID: String!
}

type Customer {
  createdAt: DateTime!
  updatedAt: DateTime!
  displayName: String
  uid: String!
  user: User
  bookings: [Booking!]!
}

type Booking {
  createdAt: DateTime!
  updatedAt: DateTime!
  pricePerHour: Int
  totalPrice: Int
  phoneNumber: String
  passcode: String
  status: BookingStatus!
  id: Int!
  startTime: DateTime!
  endTime: DateTime!
  vehicleNumber: String!
  slotId: Int!
  customerId: String!
  slot: Slot!
  customer: Customer!
  bookingTimeline: [BookingTimeline!]!
  valetAssignment: ValetAssignment
}

enum BookingStatus {
  BOOKED
  VALET_ASSIGNED_FOR_CHECK_IN
  VALET_PICKED_UP
  CHECKED_IN
  VALET_ASSIGNED_FOR_CHECK_OUT
  CHECKED_OUT
  VALET_RETURNED
}

type Verification {
  createdAt: DateTime!
  updatedAt: DateTime!
  adminId: String!
  garageId: Int!
  verified: Boolean!
}

type Company {
  createdAt: DateTime!
  updatedAt: DateTime!
  displayName: String
  description: String
  id: Int!
  garages: [Garage!]!
  managers: [Manager!]!
}

type Garage {
  createdAt: DateTime!
  updatedAt: DateTime!
  displayName: String
  description: String
  id: Int!
  images: [String!]!
  companyId: Int!
  slotCounts: [SlotTypeCount!]!
  availableSlots(slotsFilter: SlotWhereInput, dateFilter: DateFilterInput!): [MinimalSlotGroupBy!]!
  verification: Verification
  company: Company!
  address: Address
  slots: [Slot!]!
}

input SlotWhereInput {
  id: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  displayName: StringFilter
  pricePerHour: FloatFilter
  length: IntFilter
  width: IntFilter
  height: IntFilter
  type: EnumSlotTypeFilter
  garageId: IntFilter
  Garage: GarageRelationFilter
  Bookings: BookingListRelationFilter
  AND: [SlotWhereInput!]
  OR: [SlotWhereInput!]
  NOT: [SlotWhereInput!]
}

input IntFilter {
  equals: Int
  lt: Int
  lte: Int
  gt: Int
  gte: Int
}

input DateTimeFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: String
  mode: QueryMode
}

enum QueryMode {
  default
  insensitive
}

input FloatFilter {
  equals: Int
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: Int
}

input EnumSlotTypeFilter {
  equals: SlotType
  in: [SlotType!]
  notIn: [SlotType!]
  not: SlotType
}

enum SlotType {
  CAR
  HEAVY
  BIKE
  BICYCLE
}

input GarageRelationFilter {
  is: GarageWhereInput
  isNot: GarageWhereInput
}

input GarageWhereInput {
  id: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  displayName: StringFilter
  description: StringFilter
  images: StringListFilter
  companyId: IntFilter
  Company: CompanyRelationFilter
  Address: AddressRelationFilter
  Verification: VerificationRelationFilter
  Reviews: ReviewListRelationFilter
  Slots: SlotListRelationFilter
  AND: [GarageWhereInput!]
  OR: [GarageWhereInput!]
  NOT: [GarageWhereInput!]
}

input StringListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

input CompanyRelationFilter {
  is: CompanyWhereInput
  isNot: CompanyWhereInput
}

input CompanyWhereInput {
  id: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  displayName: StringFilter
  description: StringFilter
  Garages: GarageListRelationFilter
  Managers: ManagerListRelationFilter
  Valets: ValetListRelationFilter
  AND: [CompanyWhereInput!]
  OR: [CompanyWhereInput!]
  NOT: [CompanyWhereInput!]
}

input GarageListRelationFilter {
  every: GarageWhereInput
  some: GarageWhereInput
  none: GarageWhereInput
}

input ManagerListRelationFilter {
  every: ManagerWhereInput
  some: ManagerWhereInput
  none: ManagerWhereInput
}

input ManagerWhereInput {
  User: UserRelationFilter
  uid: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  displayName: StringFilter
  companyId: IntFilter
  Company: CompanyRelationFilter
  BookingTimeline: BookingTimelineListRelationFilter
  AND: [ManagerWhereInput!]
  OR: [ManagerWhereInput!]
  NOT: [ManagerWhereInput!]
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input UserWhereInput {
  uid: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  name: StringFilter
  Customer: CustomerRelationFilter
  Manager: ManagerRelationFilter
  Valet: ValetRelationFilter
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input CustomerRelationFilter {
  is: CustomerWhereInput
  isNot: CustomerWhereInput
}

input CustomerWhereInput {
  User: UserRelationFilter
  uid: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  displayName: StringFilter
  Bookings: BookingListRelationFilter
  Reviews: ReviewListRelationFilter
  AND: [CustomerWhereInput!]
  OR: [CustomerWhereInput!]
  NOT: [CustomerWhereInput!]
}

input BookingListRelationFilter {
  every: BookingWhereInput
  some: BookingWhereInput
  none: BookingWhereInput
}

input BookingWhereInput {
  id: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  pricePerHour: FloatFilter
  totalPrice: FloatFilter
  startTime: DateTimeFilter
  endTime: DateTimeFilter
  vehicleNumber: StringFilter
  phoneNumber: StringFilter
  passcode: StringFilter
  status: EnumBookingStatusFilter
  slotId: IntFilter
  customerId: StringFilter
  ValetAssignment: ValetAssignmentRelationFilter
  Customer: CustomerRelationFilter
  Slot: SlotRelationFilter
  BookingTimeline: BookingTimelineListRelationFilter
  AND: [BookingWhereInput!]
  OR: [BookingWhereInput!]
  NOT: [BookingWhereInput!]
}

input EnumBookingStatusFilter {
  equals: BookingStatus
  in: [BookingStatus!]
  notIn: [BookingStatus!]
  not: BookingStatus
}

input ValetAssignmentRelationFilter {
  is: ValetAssignmentWhereInput
  isNot: ValetAssignmentWhereInput
}

input ValetAssignmentWhereInput {
  bookingId: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  pickupLat: FloatFilter
  pickupLng: FloatFilter
  returnLat: FloatFilter
  returnLng: FloatFilter
  pickupValetId: StringFilter
  returnValetId: StringFilter
  PickupValet: ValetRelationFilter
  ReturnValet: ValetRelationFilter
  Booking: BookingRelationFilter
  AND: [ValetAssignmentWhereInput!]
  OR: [ValetAssignmentWhereInput!]
  NOT: [ValetAssignmentWhereInput!]
}

input ValetRelationFilter {
  is: ValetWhereInput
  isNot: ValetWhereInput
}

input ValetWhereInput {
  uid: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  displayName: StringFilter
  image: StringFilter
  licenceID: StringFilter
  companyId: IntFilter
  User: UserRelationFilter
  Company: CompanyRelationFilter
  BookingTimeline: BookingTimelineListRelationFilter
  PickupAssignments: ValetAssignmentListRelationFilter
  ReturnAssignments: ValetAssignmentListRelationFilter
  AND: [ValetWhereInput!]
  OR: [ValetWhereInput!]
  NOT: [ValetWhereInput!]
}

input BookingTimelineListRelationFilter {
  every: BookingTimelineWhereInput
  some: BookingTimelineWhereInput
  none: BookingTimelineWhereInput
}

input BookingTimelineWhereInput {
  status: BookingStatus
  id: IntFilter
  timestamp: DateTimeFilter
  bookingId: IntFilter
  valetId: StringFilter
  managerId: StringFilter
  Booking: BookingRelationFilter
  Valet: ValetRelationFilter
  Manager: ManagerRelationFilter
  AND: [BookingTimelineWhereInput!]
  OR: [BookingTimelineWhereInput!]
  NOT: [BookingTimelineWhereInput!]
}

input BookingRelationFilter {
  is: BookingWhereInput
  isNot: BookingWhereInput
}

input ManagerRelationFilter {
  is: ManagerWhereInput
  isNot: ManagerWhereInput
}

input ValetAssignmentListRelationFilter {
  every: ValetAssignmentWhereInput
  some: ValetAssignmentWhereInput
  none: ValetAssignmentWhereInput
}

input SlotRelationFilter {
  is: SlotWhereInput
  isNot: SlotWhereInput
}

input ReviewListRelationFilter {
  every: ReviewWhereInput
  some: ReviewWhereInput
  none: ReviewWhereInput
}

input ReviewWhereInput {
  id: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  rating: IntFilter
  comment: StringFilter
  customerId: StringFilter
  garageId: IntFilter
  Customer: CustomerRelationFilter
  Garage: GarageRelationFilter
  AND: [ReviewWhereInput!]
  OR: [ReviewWhereInput!]
  NOT: [ReviewWhereInput!]
}

input ValetListRelationFilter {
  every: ValetWhereInput
  some: ValetWhereInput
  none: ValetWhereInput
}

input AddressRelationFilter {
  is: AddressWhereInput
  isNot: AddressWhereInput
}

input AddressWhereInput {
  id: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  address: StringFilter
  lat: FloatFilter
  lng: FloatFilter
  garageId: IntFilter
  Garage: GarageRelationFilter
  AND: [AddressWhereInput!]
  OR: [AddressWhereInput!]
  NOT: [AddressWhereInput!]
}

input VerificationRelationFilter {
  is: VerificationWhereInput
  isNot: VerificationWhereInput
}

input VerificationWhereInput {
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  verified: BoolFilter
  adminId: StringFilter
  garageId: IntFilter
  Admin: AdminRelationFilter
  Garage: GarageRelationFilter
  AND: [VerificationWhereInput!]
  OR: [VerificationWhereInput!]
  NOT: [VerificationWhereInput!]
}

input BoolFilter {
  equals: Boolean
  not: Boolean
}

input AdminRelationFilter {
  is: AdminWhereInput
  isNot: AdminWhereInput
}

input AdminWhereInput {
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  User: UserRelationFilter
  Verifications: VerificationListRelationFilter
  uid: StringFilter
  AND: [AdminWhereInput!]
  OR: [AdminWhereInput!]
  NOT: [AdminWhereInput!]
}

input VerificationListRelationFilter {
  every: VerificationWhereInput
  some: VerificationWhereInput
  none: VerificationWhereInput
}

input SlotListRelationFilter {
  every: SlotWhereInput
  some: SlotWhereInput
  none: SlotWhereInput
}

input DateFilterInput {
  start: String!
  end: String!
}

type SlotTypeCount {
  type: SlotType!
  count: Int
}

type Address {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  address: String!
  lat: Float!
  lng: Float!
  garageId: Int
}

type Slot {
  createdAt: DateTime!
  updatedAt: DateTime!
  displayName: String
  length: Int
  width: Int
  height: Int
  type: SlotType!
  id: Int!
  pricePerHour: Int!
  garageId: Int!
  garage: Garage!
  bookings: [Booking!]!
}

type ReturnCount {
  count: Int!
}

type MinimalSlotGroupBy {
  type: SlotType!
  pricePerHour: Int!
  count: Int!
}

type ValetAssignment {
  bookingId: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  pickupLat: Int!
  pickupLng: Int!
  returnLat: Int
  returnLng: Int
  pickupValetId: String
  returnValetId: String
  pickupValet: Valet
  returnValet: Valet
}

type BookingTimeline {
  id: Int!
  timestamp: DateTime!
  status: BookingStatus!
  bookingId: Int!
  valetId: String!
  managerId: String!
}

type Review {
  createdAt: DateTime!
  updatedAt: DateTime!
  comment: String
  id: Int!
  rating: Int!
  customerId: String!
  garageId: Int!
}

type Query {
  whoami: User!
  users(where: UserWhereInput, orderBy: [UserOrderByWithRelationInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: [UserScalarFieldEnum!]): [User!]!
  user(where: UserWhereUniqueInput!): User!
  getAuthProvider(uid: String!): AuthProvider
  admins(where: AdminWhereInput, orderBy: [AdminOrderByWithRelationInput!], cursor: AdminWhereUniqueInput, take: Int, skip: Int, distinct: [AdminScalarFieldEnum!]): [Admin!]!
  admin(where: AdminWhereUniqueInput!): Admin!
  adminMe: Admin!
  adminsCount(where: AdminWhereInput): Int!
  customers(where: CustomerWhereInput, orderBy: [CustomerOrderByWithRelationInput!], cursor: CustomerWhereUniqueInput, take: Int, skip: Int, distinct: [CustomerScalarFieldEnum!]): [Customer!]!
  customer(where: CustomerWhereUniqueInput!): Customer!
  managers(where: ManagerWhereInput, orderBy: [ManagerOrderByWithRelationInput!], cursor: ManagerWhereUniqueInput, take: Int, skip: Int, distinct: [ManagerScalarFieldEnum!]): [Manager!]!
  manager(where: ManagerWhereUniqueInput!): Manager!
  valets(distinct: [ValetScalarFieldEnum!], where: ValetWhereInput, orderBy: [ValetOrderByWithRelationInput!], cursor: ValetWhereUniqueInput, take: Int, skip: Int): [Valet!]!
  companyValets(distinct: [ValetScalarFieldEnum!], where: ValetWhereInput, orderBy: [ValetOrderByWithRelationInput!], cursor: ValetWhereUniqueInput, take: Int, skip: Int): [Valet!]!
  companyValetsTotal(where: ValetWhereInput): Int!
  valet(where: ValetWhereUniqueInput!): Valet!
  valetMe: Valet
  valetPickups(take: Int, skip: Int): [Booking!]!
  valetPickupsTotal: Int!
  valetDrops(take: Int, skip: Int): [Booking!]!
  valetDropsTotal: Int!
  companies(where: CompanyWhereInput, orderBy: [CompanyOrderByWithRelationInput!], cursor: CompanyWhereUniqueInput, take: Int, skip: Int, distinct: [CompanyScalarFieldEnum!]): [Company!]!
  myCompany: Company!
  company(where: CompanyWhereUniqueInput!): Company!
  garages(where: GarageWhereInput, orderBy: [GarageOrderByWithRelationInput!], cursor: GarageWhereUniqueInput, take: Int, skip: Int, distinct: [GarageScalarFieldEnum!]): [Garage!]!
  garage(where: GarageWhereUniqueInput!): Garage!
  searchGarages(dateFilter: DateFilterInput!, locationFilter: LocationFilterInput!, slotsFilter: SlotWhereInput, garageFilter: GarageFilter): [Garage!]!
  garagesCount(where: GarageWhereInput): AggregateCountOutput!
  addresses(where: AddressWhereInput, orderBy: [AddressOrderByWithRelationInput!], cursor: AddressWhereUniqueInput, take: Int, skip: Int, distinct: [AddressScalarFieldEnum!]): [Address!]!
  address(where: AddressWhereUniqueInput!): Address!
  slots(where: SlotWhereInput, orderBy: [SlotOrderByWithRelationInput!], cursor: SlotWhereUniqueInput, take: Int, skip: Int, distinct: [SlotScalarFieldEnum!]): [Slot!]!
  slot(where: SlotWhereUniqueInput!): Slot!
  bookings(where: BookingWhereInput, orderBy: [BookingOrderByWithRelationInput!], cursor: BookingWhereUniqueInput, take: Int, skip: Int, distinct: [BookingScalarFieldEnum!]): [Booking!]!
  bookingsForValet(where: BookingWhereInput, orderBy: [BookingOrderByWithRelationInput!], cursor: BookingWhereUniqueInput, take: Int, skip: Int, distinct: [BookingScalarFieldEnum!]): [Booking!]!
  bookingsForCustomer(where: BookingWhereInput, orderBy: [BookingOrderByWithRelationInput!], cursor: BookingWhereUniqueInput, take: Int, skip: Int, distinct: [BookingScalarFieldEnum!]): [Booking!]!
  bookingsForGarage(where: BookingWhereInput, orderBy: [BookingOrderByWithRelationInput!], cursor: BookingWhereUniqueInput, take: Int, skip: Int, distinct: [BookingScalarFieldEnum!]): [Booking!]!
  bookingsCount(where: BookingWhereInput): AggregateCountOutput!
  booking(where: BookingWhereUniqueInput!): Booking!
  valetAssignments(where: ValetAssignmentWhereInput, orderBy: [ValetAssignmentOrderByWithRelationInput!], cursor: ValetAssignmentWhereUniqueInput, take: Int, skip: Int, distinct: [ValetAssignmentScalarFieldEnum!]): [ValetAssignment!]!
  valetAssignment(where: ValetAssignmentWhereUniqueInput!): ValetAssignment!
  bookingTimelines(where: BookingTimelineWhereInput, orderBy: [BookingTimelineOrderByWithRelationInput!], cursor: BookingTimelineWhereUniqueInput, take: Int, skip: Int, distinct: [BookingTimelineScalarFieldEnum!]): [BookingTimeline!]!
  bookingTimeline(where: BookingTimelineWhereUniqueInput!): BookingTimeline!
  reviews(where: ReviewWhereInput, orderBy: [ReviewOrderByWithRelationInput!], cursor: ReviewWhereUniqueInput, take: Int, skip: Int, distinct: [ReviewScalarFieldEnum!]): [Review!]!
  review(where: ReviewWhereUniqueInput!): Review!
  verifications(distinct: [VerificationScalarFieldEnum!], where: VerificationWhereInput, orderBy: [VerificationOrderByWithRelationInput!], cursor: VerificationWhereUniqueInput, take: Int, skip: Int): [Verification!]!
  verification(where: VerificationWhereUniqueInput!): Verification!
}

input UserOrderByWithRelationInput {
  uid: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  name: SortOrder
  Customer: CustomerOrderByWithRelationInput
  Manager: ManagerOrderByWithRelationInput
  Valet: ValetOrderByWithRelationInput
}

enum SortOrder {
  asc
  desc
}

input CustomerOrderByWithRelationInput {
  User: UserOrderByWithRelationInput
  uid: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  displayName: SortOrder
  Bookings: BookingOrderByRelationAggregateInput
  Reviews: ReviewOrderByRelationAggregateInput
}

input BookingOrderByRelationAggregateInput {
  _count: SortOrder
}

input ReviewOrderByRelationAggregateInput {
  _count: SortOrder
}

input ManagerOrderByWithRelationInput {
  User: UserOrderByWithRelationInput
  uid: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  displayName: SortOrder
  companyId: SortOrder
  Company: CompanyOrderByWithRelationInput
  BookingTimeline: BookingTimelineOrderByRelationAggregateInput
}

input CompanyOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  displayName: SortOrder
  description: SortOrder
  Garages: GarageOrderByRelationAggregateInput
  Managers: ManagerOrderByRelationAggregateInput
  Valets: ValetOrderByRelationAggregateInput
}

input GarageOrderByRelationAggregateInput {
  _count: SortOrder
}

input ManagerOrderByRelationAggregateInput {
  _count: SortOrder
}

input ValetOrderByRelationAggregateInput {
  _count: SortOrder
}

input BookingTimelineOrderByRelationAggregateInput {
  _count: SortOrder
}

input ValetOrderByWithRelationInput {
  User: UserOrderByWithRelationInput
  uid: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  displayName: SortOrder
  image: SortOrder
  licenceID: SortOrder
  companyId: SortOrder
  Company: CompanyOrderByWithRelationInput
  BookingTimeline: BookingTimelineOrderByRelationAggregateInput
  PickupAssignments: ValetAssignmentOrderByRelationAggregateInput
  ReturnAssignments: ValetAssignmentOrderByRelationAggregateInput
}

input ValetAssignmentOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserWhereUniqueInput {
  uid: String!
}

enum UserScalarFieldEnum {
  uid
  createdAt
  updatedAt
  name
  image
}

input AdminOrderByWithRelationInput {
  uid: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  User: UserOrderByWithRelationInput
  Verifications: VerificationOrderByRelationAggregateInput
}

input VerificationOrderByRelationAggregateInput {
  _count: SortOrder
}

input AdminWhereUniqueInput {
  uid: String!
}

enum AdminScalarFieldEnum {
  uid
  createdAt
  updatedAt
}

input CustomerWhereUniqueInput {
  uid: String!
}

enum CustomerScalarFieldEnum {
  uid
  createdAt
  updatedAt
  displayName
}

input ManagerWhereUniqueInput {
  uid: String!
}

enum ManagerScalarFieldEnum {
  uid
  createdAt
  updatedAt
  displayName
  companyId
}

enum ValetScalarFieldEnum {
  uid
  createdAt
  updatedAt
  displayName
  image
  licenceID
  companyId
}

input ValetWhereUniqueInput {
  uid: String!
}

input CompanyWhereUniqueInput {
  id: Int!
}

enum CompanyScalarFieldEnum {
  id
  createdAt
  updatedAt
  displayName
  description
}

input GarageOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  displayName: SortOrder
  description: SortOrder
  images: SortOrder
  companyId: SortOrder
  Company: CompanyOrderByWithRelationInput
  Address: AddressOrderByWithRelationInput
  Verification: VerificationOrderByWithRelationInput
  Reviews: ReviewOrderByRelationAggregateInput
  Slots: SlotOrderByRelationAggregateInput
}

input AddressOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  address: SortOrder
  lat: SortOrder
  lng: SortOrder
  garageId: SortOrder
  Garage: GarageOrderByWithRelationInput
}

input VerificationOrderByWithRelationInput {
  createdAt: SortOrder
  updatedAt: SortOrder
  verified: SortOrder
  adminId: SortOrder
  garageId: SortOrder
  Admin: SortOrder
  Garage: SortOrder
}

input SlotOrderByRelationAggregateInput {
  _count: SortOrder
}

input GarageWhereUniqueInput {
  id: Int!
}

enum GarageScalarFieldEnum {
  id
  createdAt
  updatedAt
  displayName
  description
  images
  companyId
}

input LocationFilterInput {
  ne_lat: Float!
  ne_lng: Float!
  sw_lat: Float!
  sw_lng: Float!
}

input GarageFilter {
  where: GarageWhereInput
  orderBy: [GarageOrderByWithRelationInput!]
  take: Int
  skip: Int
}

input AddressWhereUniqueInput {
  id: IntFilter!
}

enum AddressScalarFieldEnum {
  id
  createdAt
  updatedAt
  address
  lat
  lng
  garageId
}

input SlotOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  displayName: SortOrder
  pricePerHour: SortOrder
  length: SortOrder
  width: SortOrder
  height: SortOrder
  type: SortOrder
  garageId: SortOrder
  Garage: GarageOrderByWithRelationInput
  Bookings: BookingOrderByRelationAggregateInput
}

input SlotWhereUniqueInput {
  id: Int!
}

enum SlotScalarFieldEnum {
  id
  createdAt
  updatedAt
  displayName
  pricePerHour
  length
  width
  height
  type
  garageId
}

input BookingOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  pricePerHour: SortOrder
  totalPrice: SortOrder
  startTime: SortOrder
  endTime: SortOrder
  vehicleNumber: SortOrder
  phoneNumber: SortOrder
  passcode: SortOrder
  status: SortOrder
  slotId: SortOrder
  customerId: SortOrder
  ValetAssignment: ValetAssignmentOrderByWithRelationInput
  Customer: CustomerOrderByWithRelationInput
  Slot: SlotOrderByWithRelationInput
  BookingTimeline: BookingTimelineOrderByRelationAggregateInput
}

input ValetAssignmentOrderByWithRelationInput {
  bookingId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  pickupLat: SortOrder
  pickupLng: SortOrder
  returnLat: SortOrder
  returnLng: SortOrder
  pickupValetId: SortOrder
  returnValetId: SortOrder
  PickupValet: ValetOrderByWithRelationInput
  ReturnValet: ValetOrderByWithRelationInput
  Booking: BookingOrderByWithRelationInput
}

input BookingWhereUniqueInput {
  id: Int!
}

enum BookingScalarFieldEnum {
  id
  createdAt
  updatedAt
  pricePerHour
  totalPrice
  startTime
  endTime
  vehicleNumber
  phoneNumber
  passcode
  status
  slotId
  customerId
}

input ValetAssignmentWhereUniqueInput {
  id: Int!
}

enum ValetAssignmentScalarFieldEnum {
  bookingId
  createdAt
  updatedAt
  pickupLat
  pickupLng
  returnLat
  returnLng
  pickupValetId
  returnValetId
}

input BookingTimelineOrderByWithRelationInput {
  id: SortOrder
  timestamp: SortOrder
  status: SortOrder
  bookingId: SortOrder
  valetId: SortOrder
  managerId: SortOrder
  Booking: BookingOrderByWithRelationInput
  Valet: ValetOrderByWithRelationInput
  Manager: ManagerOrderByWithRelationInput
}

input BookingTimelineWhereUniqueInput {
  id: Int!
}

enum BookingTimelineScalarFieldEnum {
  id
  timestamp
  status
  bookingId
  valetId
  managerId
}

input ReviewOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  rating: SortOrder
  comment: SortOrder
  customerId: SortOrder
  garageId: SortOrder
  Customer: CustomerOrderByWithRelationInput
  Garage: GarageOrderByWithRelationInput
}

input ReviewWhereUniqueInput {
  id: Int!
}

enum ReviewScalarFieldEnum {
  id
  createdAt
  updatedAt
  rating
  comment
  customerId
  garageId
}

enum VerificationScalarFieldEnum {
  createdAt
  updatedAt
  verified
  adminId
  garageId
}

input VerificationWhereUniqueInput {
  garageId: Int!
}

type Mutation {
  registerWithCredentials(registerWithCredentialsInput: RegisterWithCredentialsInput!): User!
  registerWithProvider(registerWithProviderInput: RegisterWithProviderInput!): User!
  login(loginInput: LoginInput!): LoginOutput!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(where: UserWhereUniqueInput!): User!
  createAdmin(createAdminInput: CreateAdminInput!): Admin!
  updateAdmin(updateAdminInput: UpdateAdminInput!): Admin!
  removeAdmin(where: AdminWhereUniqueInput!): Admin!
  createCustomer(createCustomerInput: CreateCustomerInput!): Customer!
  updateCustomer(updateCustomerInput: UpdateCustomerInput!): Customer!
  removeCustomer(where: CustomerWhereUniqueInput!): Customer!
  createManager(createManagerInput: CreateManagerInput!): Manager!
  updateManager(updateManagerInput: UpdateManagerInput!): Manager!
  removeManager(where: ManagerWhereUniqueInput!): Manager!
  createValet(createValetInput: CreateValetInput!): Valet!
  assignValet(bookingId: Int!, status: String!): Booking!
  updateValet(updateValetInput: UpdateValetInput!): Valet!
  removeValet(where: ValetWhereUniqueInput!): Valet!
  createCompany(createCompanyInput: CreateCompanyInput!): Company!
  updateCompany(updateCompanyInput: UpdateCompanyInput!): Company!
  removeCompany(where: CompanyWhereUniqueInput!): Company!
  createGarage(createGarageInput: CreateGarageInput!): Garage!
  updateGarage(updateGarageInput: UpdateGarageInput!): Garage!
  removeGarage(where: GarageWhereUniqueInput!): Garage!
  createAddress(createAddressInput: CreateAddressInput!): Address!
  updateAddress(updateAddressInput: UpdateAddressInput!): Address!
  removeAddress(where: AddressWhereUniqueInput!): Address!
  createSlot(createSlotInput: CreateSlotInput!): Slot!
  createManySlots(createSlotInput: CreateSlotInput!, count: Int!): ReturnCount!
  updateSlot(updateSlotInput: UpdateSlotInput!): Slot!
  removeSlot(where: SlotWhereUniqueInput!): Slot!
  createBooking(createBookingInput: CreateBookingInput!): Booking!
  updateBooking(updateBookingInput: UpdateBookingInput!): Booking!
  removeBooking(where: BookingWhereUniqueInput!): Booking!
  createValetAssignment(createValetAssignmentInput: CreateValetAssignmentInput!): ValetAssignment!
  updateValetAssignment(updateValetAssignmentInput: UpdateValetAssignmentInput!): ValetAssignment!
  removeValetAssignment(where: ValetAssignmentWhereUniqueInput!): ValetAssignment!
  createBookingTimeline(createBookingTimelineInput: CreateBookingTimelineInput!): BookingTimeline!
  updateBookingTimeline(updateBookingTimelineInput: UpdateBookingTimelineInput!): BookingTimeline!
  removeBookingTimeline(where: BookingTimelineWhereUniqueInput!): BookingTimeline!
  createReview(createReviewInput: CreateReviewInput!): Review!
  updateReview(updateReviewInput: UpdateReviewInput!): Review!
  removeReview(where: ReviewWhereUniqueInput!): Review!
  createVerification(createVerificationInput: CreateVerificationInput!): Verification!
  updateVerification(updateVerificationInput: UpdateVerificationInput!): Verification!
  removeVerification(where: VerificationWhereUniqueInput!): Verification!
}

input RegisterWithCredentialsInput {
  image: String
  name: String
  email: String!
  password: String!
}

input RegisterWithProviderInput {
  image: String
  name: String
  uid: String!
  type: AuthProviderType!
}

input LoginInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  uid: String!
}

input CreateAdminInput {
  uid: String!
}

input UpdateAdminInput {
  uid: String!
}

input CreateCustomerInput {
  displayName: String
  uid: String!
}

input UpdateCustomerInput {
  displayName: String
  uid: String!
}

input CreateManagerInput {
  displayName: String
  uid: String!
}

input UpdateManagerInput {
  displayName: String
  uid: String!
}

input CreateValetInput {
  image: String
  companyId: Int
  uid: String!
  displayName: String!
  licenceID: String!
}

input UpdateValetInput {
  image: String
  companyId: Int
  uid: String!
  displayName: String
  licenceID: String
}

input CreateCompanyInput {
  displayName: String
  description: String
  managerId: String!
  managerName: String
}

input UpdateCompanyInput {
  displayName: String
  description: String
  managerId: String
  managerName: String
  id: Int!
}

input CreateGarageInput {
  displayName: String
  description: String
  images: [String!]!
  Address: CreateAddressInputWithoutGarageId!
  Slots: [CreateSlotInputWithoutGarageId!]!
}

input CreateAddressInputWithoutGarageId {
  address: String!
  lat: Float!
  lng: Float!
}

input CreateSlotInputWithoutGarageId {
  displayName: String
  length: Int
  width: Int
  height: Int
  type: SlotType!
  pricePerHour: Int!
  count: Int!
}

input UpdateGarageInput {
  displayName: String
  description: String
  images: [String!]
  Address: CreateAddressInputWithoutGarageId
  Slots: [CreateSlotInputWithoutGarageId!]
  id: Int!
}

input CreateAddressInput {
  address: String!
  lat: Float!
  lng: Float!
  garageId: Int
}

input UpdateAddressInput {
  address: String
  lat: Float
  lng: Float
  garageId: Int
  id: String!
}

input CreateSlotInput {
  displayName: String
  length: Int
  width: Int
  height: Int
  type: SlotType!
  pricePerHour: Int!
  garageId: Int!
}

input UpdateSlotInput {
  displayName: String
  length: Int
  width: Int
  height: Int
  type: SlotType
  pricePerHour: Int
  garageId: Int
  id: Int!
}

input CreateBookingInput {
  phoneNumber: String
  startTime: DateTime!
  endTime: DateTime!
  vehicleNumber: String!
  customerId: String!
  type: SlotType!
  pricePerHour: Float
  totalPrice: Float
  garageId: Int!
  valetAssignment: CreateValetAssignmentInputWithoutBookingId
}

input CreateValetAssignmentInputWithoutBookingId {
  pickupLat: Int!
  pickupLng: Int!
  returnLat: Int
  returnLng: Int
}

input UpdateBookingInput {
  phoneNumber: String
  startTime: DateTime
  endTime: DateTime
  vehicleNumber: String
  customerId: String
  type: SlotType
  pricePerHour: Float
  totalPrice: Float
  garageId: Int
  valetAssignment: CreateValetAssignmentInputWithoutBookingId
  id: Int!
}

input CreateValetAssignmentInput {
  bookingId: Int!
  pickupLat: Int!
  pickupLng: Int!
  returnLat: Int
  returnLng: Int
  pickupValetId: String
  returnValetId: String
}

input UpdateValetAssignmentInput {
  bookingId: Int!
  pickupLat: Int
  pickupLng: Int
  returnLat: Int
  returnLng: Int
  pickupValetId: String
  returnValetId: String
}

input CreateBookingTimelineInput {
  status: BookingStatus!
  bookingId: Int!
}

input UpdateBookingTimelineInput {
  status: BookingStatus
  bookingId: Int
  id: Int!
}

input CreateReviewInput {
  comment: String
  rating: Int!
  customerId: String!
  garageId: Int!
}

input UpdateReviewInput {
  comment: String
  rating: Int
  customerId: String
  garageId: Int
  id: Int!
}

input CreateVerificationInput {
  garageId: Int!
  verified: Boolean!
}

input UpdateVerificationInput {
  garageId: Int!
  verified: Boolean
}